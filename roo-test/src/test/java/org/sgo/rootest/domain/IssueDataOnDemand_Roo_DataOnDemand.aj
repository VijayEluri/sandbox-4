// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.sgo.rootest.domain;

import java.util.List;
import java.util.Random;
import org.sgo.rootest.domain.Issue;
import org.springframework.stereotype.Component;

privileged aspect IssueDataOnDemand_Roo_DataOnDemand {
    
    declare @type: IssueDataOnDemand: @Component;
    
    private Random IssueDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Issue> IssueDataOnDemand.data;
    
    public Issue IssueDataOnDemand.getNewTransientIssue(int index) {
        org.sgo.rootest.domain.Issue obj = new org.sgo.rootest.domain.Issue();
        setSummary(obj, index);
        setRaisedDate(obj, index);
        return obj;
    }
    
    private void IssueDataOnDemand.setSummary(Issue obj, int index) {
        java.lang.String summary = "summary_" + index;
        obj.setSummary(summary);
    }
    
    private void IssueDataOnDemand.setRaisedDate(Issue obj, int index) {
        java.util.Calendar raisedDate = java.util.Calendar.getInstance();
        obj.setRaisedDate(raisedDate);
    }
    
    public Issue IssueDataOnDemand.getSpecificIssue(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Issue obj = data.get(index);
        return Issue.findIssue(obj.getId());
    }
    
    public Issue IssueDataOnDemand.getRandomIssue() {
        init();
        Issue obj = data.get(rnd.nextInt(data.size()));
        return Issue.findIssue(obj.getId());
    }
    
    public boolean IssueDataOnDemand.modifyIssue(Issue obj) {
        return false;
    }
    
    public void IssueDataOnDemand.init() {
        data = org.sgo.rootest.domain.Issue.findIssueEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Issue' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.sgo.rootest.domain.Issue>();
        for (int i = 0; i < 10; i++) {
            org.sgo.rootest.domain.Issue obj = getNewTransientIssue(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
